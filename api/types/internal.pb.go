//
//Copyright 2025 The maco Authors
//
//This program is offered under a commercial and under the AGPL license.
//For AGPL licensing, see below.
//
//AGPL licensing:
//This program is free software: you can redistribute it and/or modify
//it under the terms of the GNU Affero General Public License as published by
//the Free Software Foundation, either version 3 of the License, or
//(at your option) any later version.
//
//This program is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
//MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//GNU Affero General Public License for more details.
//
//You should have received a copy of the GNU Affero General Public License
//along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.28.3
// source: api/types/internal.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	EventType_EventUnknown EventType = 0
	EventType_EventConnect EventType = 1
	EventType_EventCall    EventType = 2
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "EventUnknown",
		1: "EventConnect",
		2: "EventCall",
	}
	EventType_value = map[string]int32{
		"EventUnknown": 0,
		"EventConnect": 1,
		"EventCall":    2,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_types_internal_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_api_types_internal_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_api_types_internal_proto_rawDescGZIP(), []int{0}
}

// ValueType 数值类型
type ValueType int32

const (
	ValueType_ValueString  ValueType = 0
	ValueType_ValueInteger ValueType = 1
	ValueType_ValueFloat   ValueType = 2
	ValueType_ValueBoolean ValueType = 3
	// 复杂类型，通过 json 转化
	ValueType_ValueObject ValueType = 4
)

// Enum value maps for ValueType.
var (
	ValueType_name = map[int32]string{
		0: "ValueString",
		1: "ValueInteger",
		2: "ValueFloat",
		3: "ValueBoolean",
		4: "ValueObject",
	}
	ValueType_value = map[string]int32{
		"ValueString":  0,
		"ValueInteger": 1,
		"ValueFloat":   2,
		"ValueBoolean": 3,
		"ValueObject":  4,
	}
)

func (x ValueType) Enum() *ValueType {
	p := new(ValueType)
	*p = x
	return p
}

func (x ValueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValueType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_types_internal_proto_enumTypes[1].Descriptor()
}

func (ValueType) Type() protoreflect.EnumType {
	return &file_api_types_internal_proto_enumTypes[1]
}

func (x ValueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValueType.Descriptor instead.
func (ValueType) EnumDescriptor() ([]byte, []int) {
	return file_api_types_internal_proto_rawDescGZIP(), []int{1}
}

// ResultType 任务返回类型
type ResultType int32

const (
	// 用户不满足条件
	ResultType_ResultSkip ResultType = 0
	// 直接结果正确
	ResultType_ResultOk ResultType = 1
	// 直接结果错误
	ResultType_ResultError ResultType = 2
)

// Enum value maps for ResultType.
var (
	ResultType_name = map[int32]string{
		0: "ResultSkip",
		1: "ResultOk",
		2: "ResultError",
	}
	ResultType_value = map[string]int32{
		"ResultSkip":  0,
		"ResultOk":    1,
		"ResultError": 2,
	}
)

func (x ResultType) Enum() *ResultType {
	p := new(ResultType)
	*p = x
	return p
}

func (x ResultType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResultType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_types_internal_proto_enumTypes[2].Descriptor()
}

func (ResultType) Type() protoreflect.EnumType {
	return &file_api_types_internal_proto_enumTypes[2]
}

func (x ResultType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResultType.Descriptor instead.
func (ResultType) EnumDescriptor() ([]byte, []int) {
	return file_api_types_internal_proto_rawDescGZIP(), []int{2}
}

// Minion defines the base information of maco-minion
type Minion struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Name     string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uid      string                 `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Ip       string                 `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Hostname string                 `protobuf:"bytes,4,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Tags     map[string]string      `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// operation system
	Os string `protobuf:"bytes,6,opt,name=os,proto3" json:"os,omitempty"`
	// cpu architecture
	Arch string `protobuf:"bytes,7,opt,name=arch,proto3" json:"arch,omitempty"`
	// the version of minion
	Version string `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`
	// registry time
	RegistryTimestamp int64 `protobuf:"varint,21,opt,name=registry_timestamp,json=registryTimestamp,proto3" json:"registry_timestamp,omitempty"`
	// the timestamp of minion connects to server
	OnlineTimestamp int64 `protobuf:"varint,22,opt,name=online_timestamp,json=onlineTimestamp,proto3" json:"online_timestamp,omitempty"`
	// the timestamp of minion offline
	OfflineTimestamp int64 `protobuf:"varint,23,opt,name=offline_timestamp,json=offlineTimestamp,proto3" json:"offline_timestamp,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Minion) Reset() {
	*x = Minion{}
	mi := &file_api_types_internal_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Minion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Minion) ProtoMessage() {}

func (x *Minion) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_internal_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Minion.ProtoReflect.Descriptor instead.
func (*Minion) Descriptor() ([]byte, []int) {
	return file_api_types_internal_proto_rawDescGZIP(), []int{0}
}

func (x *Minion) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Minion) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Minion) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Minion) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Minion) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Minion) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Minion) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *Minion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Minion) GetRegistryTimestamp() int64 {
	if x != nil {
		return x.RegistryTimestamp
	}
	return 0
}

func (x *Minion) GetOnlineTimestamp() int64 {
	if x != nil {
		return x.OnlineTimestamp
	}
	return 0
}

func (x *Minion) GetOfflineTimestamp() int64 {
	if x != nil {
		return x.OfflineTimestamp
	}
	return 0
}

// Grain defines the base
type Grain struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Grain) Reset() {
	*x = Grain{}
	mi := &file_api_types_internal_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Grain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Grain) ProtoMessage() {}

func (x *Grain) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_internal_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Grain.ProtoReflect.Descriptor instead.
func (*Grain) Descriptor() ([]byte, []int) {
	return file_api_types_internal_proto_rawDescGZIP(), []int{1}
}

type Value struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          EventType              `protobuf:"varint,1,opt,name=type,proto3,enum=types.EventType" json:"type,omitempty"`
	Data          string                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Value) Reset() {
	*x = Value{}
	mi := &file_api_types_internal_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_internal_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_api_types_internal_proto_rawDescGZIP(), []int{2}
}

func (x *Value) GetType() EventType {
	if x != nil {
		return x.Type
	}
	return EventType_EventUnknown
}

func (x *Value) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type ConnectRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Minion          *Minion                `protobuf:"bytes,1,opt,name=minion,proto3" json:"minion,omitempty"`
	MinionPublicKey []byte                 `protobuf:"bytes,2,opt,name=minionPublicKey,proto3" json:"minionPublicKey,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	mi := &file_api_types_internal_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_internal_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_api_types_internal_proto_rawDescGZIP(), []int{3}
}

func (x *ConnectRequest) GetMinion() *Minion {
	if x != nil {
		return x.Minion
	}
	return nil
}

func (x *ConnectRequest) GetMinionPublicKey() []byte {
	if x != nil {
		return x.MinionPublicKey
	}
	return nil
}

type ConnectResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Minion          *Minion                `protobuf:"bytes,1,opt,name=minion,proto3" json:"minion,omitempty"`
	MasterPublicKey []byte                 `protobuf:"bytes,2,opt,name=masterPublicKey,proto3" json:"masterPublicKey,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	mi := &file_api_types_internal_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_internal_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_api_types_internal_proto_rawDescGZIP(), []int{4}
}

func (x *ConnectResponse) GetMinion() *Minion {
	if x != nil {
		return x.Minion
	}
	return nil
}

func (x *ConnectResponse) GetMasterPublicKey() []byte {
	if x != nil {
		return x.MasterPublicKey
	}
	return nil
}

//	enum Op {
//	 OpEq = 0;
//	 OpGt = 1;
//	 OpGte = 2;
//	 OpLt = 3;
//	 OpLte = 4;
//	 OpLike = 5;
//	}
//
//	enum Logic {
//	 LgUnknown = 0;
//	 LgAnd = 1; // 逻辑与
//	 LgOr = 2; // 逻辑或
//	}
//
// // Condition 筛选条件
//
//	message Field {
//	 Op op = 1;
//	 string query = 2;
//	 string value = 3;
//	}
//
// // Segment 筛选语句
//
//	message Segment {
//	 // 连接逻辑
//	 Logic logic = 1;
//	 // minion 条件
//	 Field minion = 2;
//	 // minion grain 条件
//	 Field grain = 3;
//	}
//
// // Selector minion 筛选器
type Selector struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Minions       []string               `protobuf:"bytes,1,rep,name=minions,proto3" json:"minions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Selector) Reset() {
	*x = Selector{}
	mi := &file_api_types_internal_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Selector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Selector) ProtoMessage() {}

func (x *Selector) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_internal_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Selector.ProtoReflect.Descriptor instead.
func (*Selector) Descriptor() ([]byte, []int) {
	return file_api_types_internal_proto_rawDescGZIP(), []int{5}
}

func (x *Selector) GetMinions() []string {
	if x != nil {
		return x.Minions
	}
	return nil
}

type CallRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 请求 id，确认请求唯一值
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 筛选符合的 minion
	Selector *Selector `protobuf:"bytes,2,opt,name=selector,proto3" json:"selector,omitempty"`
	// 请求方法，使用.分割，确认对应模块下的方法，如: a.b.c
	Function string `protobuf:"bytes,3,opt,name=function,proto3" json:"function,omitempty"`
	// 方法参数
	Args []string `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty"`
	// 加密参数
	Pillars map[string]*Value `protobuf:"bytes,5,rep,name=pillars,proto3" json:"pillars,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// 请求超时时长
	Timeout       int64 `protobuf:"varint,6,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallRequest) Reset() {
	*x = CallRequest{}
	mi := &file_api_types_internal_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallRequest) ProtoMessage() {}

func (x *CallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_internal_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallRequest.ProtoReflect.Descriptor instead.
func (*CallRequest) Descriptor() ([]byte, []int) {
	return file_api_types_internal_proto_rawDescGZIP(), []int{6}
}

func (x *CallRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CallRequest) GetSelector() *Selector {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *CallRequest) GetFunction() string {
	if x != nil {
		return x.Function
	}
	return ""
}

func (x *CallRequest) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *CallRequest) GetPillars() map[string]*Value {
	if x != nil {
		return x.Pillars
	}
	return nil
}

func (x *CallRequest) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type CallResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 请求的 id
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 任务返回类型
	Type ResultType `protobuf:"varint,2,opt,name=type,proto3,enum=types.ResultType" json:"type,omitempty"`
	// 错误信息
	Error string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	// 执行命令的返回码
	RetCode int32 `protobuf:"varint,4,opt,name=retCode,proto3" json:"retCode,omitempty"`
	// 输出结果
	Result []byte `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	// 修改信息
	Changes       *ResultChanges `protobuf:"bytes,6,opt,name=changes,proto3" json:"changes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallResponse) Reset() {
	*x = CallResponse{}
	mi := &file_api_types_internal_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallResponse) ProtoMessage() {}

func (x *CallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_internal_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallResponse.ProtoReflect.Descriptor instead.
func (*CallResponse) Descriptor() ([]byte, []int) {
	return file_api_types_internal_proto_rawDescGZIP(), []int{7}
}

func (x *CallResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CallResponse) GetType() ResultType {
	if x != nil {
		return x.Type
	}
	return ResultType_ResultSkip
}

func (x *CallResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *CallResponse) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *CallResponse) GetResult() []byte {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *CallResponse) GetChanges() *ResultChanges {
	if x != nil {
		return x.Changes
	}
	return nil
}

type ResultChanges struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResultChanges) Reset() {
	*x = ResultChanges{}
	mi := &file_api_types_internal_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResultChanges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultChanges) ProtoMessage() {}

func (x *ResultChanges) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_internal_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultChanges.ProtoReflect.Descriptor instead.
func (*ResultChanges) Descriptor() ([]byte, []int) {
	return file_api_types_internal_proto_rawDescGZIP(), []int{8}
}

// Report Minion 执行结果
type Report struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*ReportItem          `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Summary       *ReportSummary         `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Report) Reset() {
	*x = Report{}
	mi := &file_api_types_internal_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Report) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Report) ProtoMessage() {}

func (x *Report) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_internal_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Report.ProtoReflect.Descriptor instead.
func (*Report) Descriptor() ([]byte, []int) {
	return file_api_types_internal_proto_rawDescGZIP(), []int{9}
}

func (x *Report) GetItems() []*ReportItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Report) GetSummary() *ReportSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

type ReportItem struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Minion         string                 `protobuf:"bytes,1,opt,name=minion,proto3" json:"minion,omitempty"`
	StartTimestamp int64                  `protobuf:"varint,2,opt,name=startTimestamp,proto3" json:"startTimestamp,omitempty"`
	EndTimestamp   int64                  `protobuf:"varint,3,opt,name=endTimestamp,proto3" json:"endTimestamp,omitempty"`
	Result         bool                   `protobuf:"varint,5,opt,name=result,proto3" json:"result,omitempty"`
	Error          string                 `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	Data           []byte                 `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ReportItem) Reset() {
	*x = ReportItem{}
	mi := &file_api_types_internal_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportItem) ProtoMessage() {}

func (x *ReportItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_internal_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportItem.ProtoReflect.Descriptor instead.
func (*ReportItem) Descriptor() ([]byte, []int) {
	return file_api_types_internal_proto_rawDescGZIP(), []int{10}
}

func (x *ReportItem) GetMinion() string {
	if x != nil {
		return x.Minion
	}
	return ""
}

func (x *ReportItem) GetStartTimestamp() int64 {
	if x != nil {
		return x.StartTimestamp
	}
	return 0
}

func (x *ReportItem) GetEndTimestamp() int64 {
	if x != nil {
		return x.EndTimestamp
	}
	return 0
}

func (x *ReportItem) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *ReportItem) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ReportItem) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReportSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       int64                  `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Changes       int64                  `protobuf:"varint,2,opt,name=changes,proto3" json:"changes,omitempty"`
	Failed        int64                  `protobuf:"varint,3,opt,name=failed,proto3" json:"failed,omitempty"`
	Total         int64                  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportSummary) Reset() {
	*x = ReportSummary{}
	mi := &file_api_types_internal_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportSummary) ProtoMessage() {}

func (x *ReportSummary) ProtoReflect() protoreflect.Message {
	mi := &file_api_types_internal_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportSummary.ProtoReflect.Descriptor instead.
func (*ReportSummary) Descriptor() ([]byte, []int) {
	return file_api_types_internal_proto_rawDescGZIP(), []int{11}
}

func (x *ReportSummary) GetSuccess() int64 {
	if x != nil {
		return x.Success
	}
	return 0
}

func (x *ReportSummary) GetChanges() int64 {
	if x != nil {
		return x.Changes
	}
	return 0
}

func (x *ReportSummary) GetFailed() int64 {
	if x != nil {
		return x.Failed
	}
	return 0
}

func (x *ReportSummary) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_api_types_internal_proto protoreflect.FileDescriptor

var file_api_types_internal_proto_rawDesc = string([]byte{
	0x0a, 0x18, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x22, 0x85, 0x03, 0x0a, 0x06, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x61, 0x67, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6f,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x72, 0x63, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x07, 0x0a, 0x05, 0x47, 0x72, 0x61,
	0x69, 0x6e, 0x22, 0x41, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x61, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x12, 0x28,
	0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x62, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x6d,
	0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x4d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x69,
	0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x24, 0x0a, 0x08,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x99, 0x02, 0x0a, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2b, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x72, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12,
	0x39, 0x0a, 0x07, 0x70, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x70, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x1a, 0x48, 0x0a, 0x0c, 0x50, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbd,
	0x01, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2e,
	0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0x0f,
	0x0a, 0x0d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x22,
	0x61, 0x0a, 0x06, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x22, 0xb2, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x71, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x2a, 0x3e, 0x0a, 0x09, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x10, 0x02, 0x2a, 0x61, 0x0a, 0x09, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x10, 0x04, 0x2a, 0x3b, 0x0a,
	0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x6b, 0x69, 0x70, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x4f, 0x6b, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x02, 0x42, 0x4e, 0x0a, 0x16, 0x69, 0x6f,
	0x2e, 0x76, 0x69, 0x6e, 0x65, 0x2e, 0x6d, 0x61, 0x63, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x42, 0x09, 0x4d, 0x61, 0x63, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x73, 0x50,
	0x01, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x69,
	0x6e, 0x65, 0x2d, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x63, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x3b, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_api_types_internal_proto_rawDescOnce sync.Once
	file_api_types_internal_proto_rawDescData []byte
)

func file_api_types_internal_proto_rawDescGZIP() []byte {
	file_api_types_internal_proto_rawDescOnce.Do(func() {
		file_api_types_internal_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_types_internal_proto_rawDesc), len(file_api_types_internal_proto_rawDesc)))
	})
	return file_api_types_internal_proto_rawDescData
}

var file_api_types_internal_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_types_internal_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_api_types_internal_proto_goTypes = []any{
	(EventType)(0),          // 0: types.EventType
	(ValueType)(0),          // 1: types.ValueType
	(ResultType)(0),         // 2: types.ResultType
	(*Minion)(nil),          // 3: types.Minion
	(*Grain)(nil),           // 4: types.Grain
	(*Value)(nil),           // 5: types.Value
	(*ConnectRequest)(nil),  // 6: types.ConnectRequest
	(*ConnectResponse)(nil), // 7: types.ConnectResponse
	(*Selector)(nil),        // 8: types.Selector
	(*CallRequest)(nil),     // 9: types.CallRequest
	(*CallResponse)(nil),    // 10: types.CallResponse
	(*ResultChanges)(nil),   // 11: types.ResultChanges
	(*Report)(nil),          // 12: types.Report
	(*ReportItem)(nil),      // 13: types.ReportItem
	(*ReportSummary)(nil),   // 14: types.ReportSummary
	nil,                     // 15: types.Minion.TagsEntry
	nil,                     // 16: types.CallRequest.PillarsEntry
}
var file_api_types_internal_proto_depIdxs = []int32{
	15, // 0: types.Minion.tags:type_name -> types.Minion.TagsEntry
	0,  // 1: types.Value.type:type_name -> types.EventType
	3,  // 2: types.ConnectRequest.minion:type_name -> types.Minion
	3,  // 3: types.ConnectResponse.minion:type_name -> types.Minion
	8,  // 4: types.CallRequest.selector:type_name -> types.Selector
	16, // 5: types.CallRequest.pillars:type_name -> types.CallRequest.PillarsEntry
	2,  // 6: types.CallResponse.type:type_name -> types.ResultType
	11, // 7: types.CallResponse.changes:type_name -> types.ResultChanges
	13, // 8: types.Report.items:type_name -> types.ReportItem
	14, // 9: types.Report.summary:type_name -> types.ReportSummary
	5,  // 10: types.CallRequest.PillarsEntry.value:type_name -> types.Value
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_api_types_internal_proto_init() }
func file_api_types_internal_proto_init() {
	if File_api_types_internal_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_types_internal_proto_rawDesc), len(file_api_types_internal_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_types_internal_proto_goTypes,
		DependencyIndexes: file_api_types_internal_proto_depIdxs,
		EnumInfos:         file_api_types_internal_proto_enumTypes,
		MessageInfos:      file_api_types_internal_proto_msgTypes,
	}.Build()
	File_api_types_internal_proto = out.File
	file_api_types_internal_proto_goTypes = nil
	file_api_types_internal_proto_depIdxs = nil
}
